// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.ChainalysisProxy.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TransactionStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TransactionStatus
    {
        [EnumMember(Value = "unconfirmed")]
        Unconfirmed,
        [EnumMember(Value = "confirmed")]
        Confirmed,
        [EnumMember(Value = "settled")]
        Settled,
        [EnumMember(Value = "any")]
        Any
    }
    internal static class TransactionStatusEnumExtension
    {
        internal static string ToSerializedValue(this TransactionStatus? value)
        {
            return value == null ? null : ((TransactionStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TransactionStatus value)
        {
            switch( value )
            {
                case TransactionStatus.Unconfirmed:
                    return "unconfirmed";
                case TransactionStatus.Confirmed:
                    return "confirmed";
                case TransactionStatus.Settled:
                    return "settled";
                case TransactionStatus.Any:
                    return "any";
            }
            return null;
        }

        internal static TransactionStatus? ParseTransactionStatus(this string value)
        {
            switch( value )
            {
                case "unconfirmed":
                    return TransactionStatus.Unconfirmed;
                case "confirmed":
                    return TransactionStatus.Confirmed;
                case "settled":
                    return TransactionStatus.Settled;
                case "any":
                    return TransactionStatus.Any;
            }
            return null;
        }
    }
}
